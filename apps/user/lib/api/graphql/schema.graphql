type User {
  PK: String!
  SK: String!
  Email: String!
  FirstName: String
  LastName: String
  PhoneNumber: String
  NotificationPreferences: NotificationPreferences
  CreatedAt: AWSDateTime
  UpdatedAt: AWSDateTime
  LastLogin: AWSDateTime
}

type NotificationPreferences {
  Email: Boolean
  SMS: Boolean
}

type GraphQLError {
  message: String!
  locations: [ErrorLocation]
  path: [String]
  extensions: AWSJSON
}

type ErrorLocation {
  line: Int
  column: Int
}

type Response {
  success: Boolean!
  errors: [GraphQLError]
}

input CreateUserInput {
  Email: String!
  FirstName: String
  LastName: String
  PhoneNumber: String
}

input NotificationPreferencesInput {
  Email: Boolean
  SMS: Boolean
}

input UpdateUserInput {
  FirstName: String
  LastName: String
  PhoneNumber: String
  NotificationPreferences: NotificationPreferencesInput
}

type Query {
  getUserByEmail(Email: String!): User
  getUserProfile: User
}

type Mutation {
  createUser(input: CreateUserInput!): Response
  updateUser(input: UpdateUserInput!): Response
}